version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: umsstarter
    ports:
      - "5332:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d umsstarter" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: [ "redis-server", "--appendonly", "yes" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      # Spring Boot server port
      SERVER_PORT: "8000"

      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=60"

    # Optional healthcheck if you have Spring Actuator on /actuator/health
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8000/actuator/health" ]
      interval: 10s
      timeout: 3s
      retries: 20


volumes:
  postgres_data:
    driver: local
